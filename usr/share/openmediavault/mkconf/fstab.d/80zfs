#!/bin/bash
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @copyright Copyright (c) 2009-2013 Volker Theile
# @copyright Copyright (c) 2013-2015 OpenMediaVault Plugin Developers
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_FSTAB_CONFIG=${OMV_FSTAB_CONFIG:-"/etc/fstab"}
OLD_MOUNT="/var/lib/openmediavault/zfs"
SYSTEMD_DIR="/etc/systemd/system"


function remove_old_mount(){
	if [ -s $OLD_MOUNT ]; then
		while read SERVICE
		do
			systemctl disable "$SERVICE"
			rm "$SYSTEMD_DIR/$SERVICE"
		done < "$OLD_MOUNT"
		rm $OLD_MOUNT
		touch $OLD_MOUNT
	fi
}

function add_new_mount(){
	local OMV_NFS_SHARE_COUNT=$(omv_config_get_count "//services/nfs/shares/share")
    for INDEX in $(seq 1 ${OMV_NFS_SHARE_COUNT}); do
		local OMV_SHARED_FOLDER_REF=$(omv_config_get "//services/nfs/shares/share[${INDEX}]/sharedfolderref")
		local OMV_SHARED_FOLDER_MNT_REF=$(omv_config_get "//shares/sharedfolder/uuid[text()=\"${OMV_SHARED_FOLDER_REF}\"]/../mntentref")
		local OMV_SHARED_FOLDER_FS_TYPE=$(omv_config_get "//fstab/mntent/uuid[text()=\"${OMV_SHARED_FOLDER_MNT_REF}\"]/../type")

		if [[ "${OMV_SHARED_FOLDER_FS_TYPE}" = "zfs" ]]; then
			local OMV_MNT_REF=$(omv_config_get "//services/nfs/shares/share[${INDEX}]/mntentref")
			local OMV_MNT_FSNAME=$(omv_config_get "//fstab/mntent/uuid[text()=\"${OMV_MNT_REF}\"]/../fsname")
			local OMV_MNT_DIR=$(omv_config_get "//fstab/mntent/uuid[text()=\"${OMV_MNT_REF}\"]/../dir")
			local OMV_MNT_HIDDEN="//fstab/mntent/uuid[text()=\"${OMV_MNT_REF}\"]/../hidden"
			#workaround not to be mounted by 90bind
			xmlstarlet ed -L -u "$OMV_MNT_HIDDEN" -v 1 $OMV_CONFIG_FILE
			local STRIP=${OMV_MNT_DIR#/}
			STRIP=${STRIP%/}
			local SERVICE="${STRIP//\//-}.mount"
			echo \
"[Unit]
Description=ZFS bind mount for NFS shares
After=zfs-mount.service

[Mount]
What=$OMV_MNT_FSNAME
Where=$OMV_MNT_DIR
Type=none
Options=bind,nofail

[Install]
WantedBy = multi-user.target" > $SYSTEMD_DIR/$SERVICE
			echo "$SERVICE" >> $OLD_MOUNT
			systemctl enable "$SERVICE"
			systemctl start "$SERVICE"
		fi
    done
	systemctl daemon-reload
}

remove_old_mount
add_new_mount