#!/bin/bash
#
# @license   http://www.gnu.org/licenses/gpl.html GPL Version 3
# @author    Volker Theile <volker.theile@openmediavault.org>
# @author    OpenMediaVault Plugin Developers <plugins@omv-extras.org>
# @author	 Ilya Kogan <ikogan@flarecode.com>
# @copyright Copyright (c) 2009-2013 Volker Theile
# @copyright Copyright (c) 2013-2014 OpenMediaVault Plugin Developers
# @copyright Copyright (c) 2015		 Ilya Kogan
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

set -e

. /etc/default/openmediavault
. /usr/share/openmediavault/scripts/helper-functions

OMV_NFSD_CONFIG=${OMV_NFSD_CONFIG:-"/etc/exports"}
OMV_NFSD_DEFAULT_EXPORT_OPTIONS=${OMV_NFSD_DEFAULT_EXPORT_OPTIONS:-""}
OMV_SED_REMOVE_HIDE_EXPR='s/,(no)?hide//g'

# Hokay, prepare for excitement. What we're trying to do is see if any
# of the shared folders are on ZFS and, if they are, see if there are
# any nested ZFS filesystems within them. For all such cases, create an
# addtional export entry for that nested FS.

echo >> ${OMV_NFSD_CONFIG}
echo "# ZFS automatic exports" >> ${OMV_NFSD_CONFIG}

# First, see if there are any NFS shares at all.
OMV_NFS_SHARE_COUNT=$(omv_config_get_count "//services/nfs/shares/share")

# Go over each share.
for INDEX in $(seq 1 ${OMV_NFS_SHARE_COUNT}); do
    # We need to fetch the filesystem type, get there from the mount reference.
	OMV_SHARED_FOLDER_REF=$(omv_config_get "//services/nfs/shares/share[${INDEX}]/sharedfolderref")
    OMV_SHARED_FOLDER_MNT_REF=$(omv_config_get "//shares/sharedfolder/uuid[text()=\"${OMV_SHARED_FOLDER_REF}\"]/../mntentref")
    OMV_SHARED_FOLDER_FS_TYPE=$(omv_config_get "//fstab/mntent/uuid[text()=\"${OMV_SHARED_FOLDER_MNT_REF}\"]/../type")

    # We only need to do more work for zfs.
    if [[ "${OMV_SHARED_FOLDER_FS_TYPE}" = "zfs" ]]; then
        # We need to figure out the shared folder's name and mount path so we
        # can look for nested ZFS filesystems and so we can generate the export
        # path.
        OMV_BASE_SHARED_FOLDER_NAME=$(omv_get_sharedfolder_name ${OMV_SHARED_FOLDER_REF})
        OMV_BASE_SHARED_FOLDER_MNT_PATH=$(omv_config_get "//fstab/mntent/uuid[text()=\"${OMV_SHARED_FOLDER_MNT_REF}\"]/../dir")
       
        # Ask ZFS for the list of filesystems and grep for any that are contained by
        # the file system we're looking at.
        for CHILD_MNT_PATH in $(zfs list | grep "${OMV_BASE_SHARED_FOLDER_MNT_PATH}/" | awk '{ print $5 }'); do
            # We need to make sure that this nested FS hasn't been manually
            # exported by someone. We'll find it's mount reference, if it exists,
            # then check to see if there are any shared folders.
            OMV_CHILD_MNT_REF=$(omv_config_get "//fstab/mntent/dir[text()=\"${CHILD_MNT_PATH}\"]/../uuid")
    
            if [[ -z "${OMV_CHILD_MNT_REF}" || $(omv_config_get_count "//services/nfs/shares/share/mntentref[text()=\"${OMV_CHILD_MNT_REF}\"]") = "0" ]]; then
                # Get the relative path, then make sure we cut off any leading slashes.
                OMV_CHILD_RELATIVE_PATH=${CHILD_MNT_PATH:${#OMV_BASE_SHARED_FOLDER_MNT_PATH}}
           
                if [[ "${OMV_CHILD_RELATIVE_PATH:0:1}" = "/" ]]; then
                    OMV_CHILD_RELATIVE_PATH=${OMV_CHILD_RELATIVE_PATH:1}
                fi
                
                # Compile the set of options so we can be sure "hide" isn't used
                # and "nohide" is.
                OMV_CHILD_EXPORT_OPTIONS=$(omv_config_get "//services/nfs/shares/share[${INDEX}]/options")
                OMV_CHILD_EXPORT_EXTRA_OPTIONS=$(omv_config_get "//services/nfs/shares/share[${INDEX}]/extraoptions")
               
                if [[ ! -z "${OMV_CHILD_EXPORT_EXTRA_OPTIONS}" ]]; then
                    OMV_CHILD_EXPORT_OPTIONS=${OMV_CHILD_EXPORT_OPTIONS},${OMV_CHILD_EXPORT_EXTRA_OPTIONS}
                fi
            
                if [[ ! -z "${OMV_NFSD_DEFAULT_EXPORT_OPTIONS}" ]]; then
                    OMV_CHILD_EXPORT_OPTIONS=${OMV_CHILD_EXPORT_OPTIONS},${OMV_NFSD_DEFAULT_EXPORT_OPTIONS}
                fi

                # Remove any "hide" or "nohide" options in the export options and append
                # "nohide". These all need to be "nohide" or the nested filesystems
                # will be hidden by NFS.            
                OMV_CHILD_EXPORT_OPTIONS=$(echo ${OMV_CHILD_EXPORT_OPTIONS} | sed -r ${OMV_SED_REMOVE_HIDE_EXPR}),nohide

                # Finally, generate the export line and append it to the exports
                # file.
                xmlstarlet sel -t \
                    -m "//services/nfs/shares/share[${INDEX}]" \
                        -o "${OMV_NFSD_EXPORT_DIR}/${OMV_BASE_SHARED_FOLDER_NAME}/${OMV_CHILD_RELATIVE_PATH}" \
                        -v "concat(' ',normalize-space(client),'(','${OMV_CHILD_EXPORT_OPTIONS}',')')" \
	                -b \
	                ${OMV_CONFIG_FILE} | xmlstarlet unesc >> ${OMV_NFSD_CONFIG}
            fi
        done
    fi
done
